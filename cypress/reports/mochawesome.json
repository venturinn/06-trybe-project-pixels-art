{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 27,
    "pending": 0,
    "failures": 14,
    "start": "2021-11-22T21:40:13.678Z",
    "end": "2021-11-22T21:41:48.843Z",
    "duration": 95165,
    "testsRegistered": 41,
    "passPercent": 65.85365853658537,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "259bd12f-6885-4d7a-9d93-2dc4969842ed",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "01c1c601-d24d-4c8d-829f-1c856303b467",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 440,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "1a996e74-1b5b-4537-988d-807b71cc55a4",
              "parentUUID": "01c1c601-d24d-4c8d-829f-1c856303b467",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1a996e74-1b5b-4537-988d-807b71cc55a4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 440,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ff2be901-ecca-4fca-9386-a731b84d8b61",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 274,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');\ncy.get('#color-palette').children('.color');",
              "err": {},
              "uuid": "21a474ca-8ec6-4966-963d-1a630c7f6700",
              "parentUUID": "ff2be901-ecca-4fca-9386-a731b84d8b61",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 383,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "489728b8-e5b6-459b-a42f-004e444f6972",
              "parentUUID": "ff2be901-ecca-4fca-9386-a731b84d8b61",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 588,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "1132d3fd-5853-454a-8d91-103bb21d1765",
              "parentUUID": "ff2be901-ecca-4fca-9386-a731b84d8b61",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 425,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "a9cac4d2-32ce-438c-947e-49dc08ff5a65",
              "parentUUID": "ff2be901-ecca-4fca-9386-a731b84d8b61",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 487,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "83435b4f-9316-412b-a643-f0eacd78b2fc",
              "parentUUID": "ff2be901-ecca-4fca-9386-a731b84d8b61",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 234,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "f84147a4-9d2b-4908-aa6b-d7152842a7cb",
              "parentUUID": "ff2be901-ecca-4fca-9386-a731b84d8b61",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 211,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "5c0849ce-52ce-4f6a-96bb-16393e448236",
              "parentUUID": "ff2be901-ecca-4fca-9386-a731b84d8b61",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "21a474ca-8ec6-4966-963d-1a630c7f6700",
            "489728b8-e5b6-459b-a42f-004e444f6972",
            "1132d3fd-5853-454a-8d91-103bb21d1765",
            "a9cac4d2-32ce-438c-947e-49dc08ff5a65",
            "83435b4f-9316-412b-a643-f0eacd78b2fc",
            "f84147a4-9d2b-4908-aa6b-d7152842a7cb",
            "5c0849ce-52ce-4f6a-96bb-16393e448236"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2602,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b69846d7-7e84-496e-b200-14524159dd2c",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 166,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "bdfad5b3-98ba-4f40-880e-0155d9523162",
              "parentUUID": "b69846d7-7e84-496e-b200-14524159dd2c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 393,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "3c9267b6-9c09-41af-b958-b8d13d753e7f",
              "parentUUID": "b69846d7-7e84-496e-b200-14524159dd2c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bdfad5b3-98ba-4f40-880e-0155d9523162",
            "3c9267b6-9c09-41af-b958-b8d13d753e7f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 559,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "33a3f736-09e3-4d08-8bf9-a05be5ffe228",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 383,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "2f2e8574-b9f3-494a-b006-ea214991e0ba",
              "parentUUID": "33a3f736-09e3-4d08-8bf9-a05be5ffe228",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 215,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "824660d7-01f1-4600-9eae-9a25783829c9",
              "parentUUID": "33a3f736-09e3-4d08-8bf9-a05be5ffe228",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 388,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "86b9b248-cb18-4062-a3d6-54e66677a16e",
              "parentUUID": "33a3f736-09e3-4d08-8bf9-a05be5ffe228",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 263,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "19e69dbb-0a72-48ef-b0e4-1d34eab4aad7",
              "parentUUID": "33a3f736-09e3-4d08-8bf9-a05be5ffe228",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2f2e8574-b9f3-494a-b006-ea214991e0ba",
            "824660d7-01f1-4600-9eae-9a25783829c9",
            "86b9b248-cb18-4062-a3d6-54e66677a16e",
            "19e69dbb-0a72-48ef-b0e4-1d34eab4aad7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1249,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "6166b176-c7ac-4d49-a90e-1bf3526f782f",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 579,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "0b826a57-50e3-4711-b27a-210ec289cd6d",
              "parentUUID": "6166b176-c7ac-4d49-a90e-1bf3526f782f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 508,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "7995c479-0110-4562-b957-9c58fc48c922",
              "parentUUID": "6166b176-c7ac-4d49-a90e-1bf3526f782f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0b826a57-50e3-4711-b27a-210ec289cd6d",
            "7995c479-0110-4562-b957-9c58fc48c922"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1087,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "688a52f8-81e3-43f6-af9d-3e748caffe56",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 184,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "38b448ea-5db1-4da2-a0a7-2e98ab794f77",
              "parentUUID": "688a52f8-81e3-43f6-af9d-3e748caffe56",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 203,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "0eb1ee27-f166-401a-a8b6-43f3aca42300",
              "parentUUID": "688a52f8-81e3-43f6-af9d-3e748caffe56",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "38b448ea-5db1-4da2-a0a7-2e98ab794f77",
            "0eb1ee27-f166-401a-a8b6-43f3aca42300"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 387,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "cbc38f81-eb10-41d1-91b8-4d5c3bfa1044",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 650,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "a135f616-11ab-4efa-bd7a-1d6606d78044",
              "parentUUID": "cbc38f81-eb10-41d1-91b8-4d5c3bfa1044",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 9603,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "c304e57d-fea4-43a5-93d6-56e1c3f14ec7",
              "parentUUID": "cbc38f81-eb10-41d1-91b8-4d5c3bfa1044",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a135f616-11ab-4efa-bd7a-1d6606d78044",
            "c304e57d-fea4-43a5-93d6-56e1c3f14ec7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10253,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "14a11647-cc2e-48c9-bdd2-f87e5a64f26b",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2546,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "7b85a47a-f784-4fae-9b1f-d683d3be317e",
              "parentUUID": "14a11647-cc2e-48c9-bdd2-f87e5a64f26b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 9665,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "af5a6e13-84f3-4f93-91d6-dd3e69d46105",
              "parentUUID": "14a11647-cc2e-48c9-bdd2-f87e5a64f26b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 2341,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "95214f5e-e71c-416b-949f-9cfa0108b923",
              "parentUUID": "14a11647-cc2e-48c9-bdd2-f87e5a64f26b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7b85a47a-f784-4fae-9b1f-d683d3be317e",
            "af5a6e13-84f3-4f93-91d6-dd3e69d46105",
            "95214f5e-e71c-416b-949f-9cfa0108b923"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 14552,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f482ac37-e7a8-435d-b247-fceba2637ab8",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 282,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "5fee3caa-8a03-4267-825d-3c4297f1cb83",
              "parentUUID": "f482ac37-e7a8-435d-b247-fceba2637ab8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 251,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "0294bc1f-23d9-4958-a004-b5ae7466ca62",
              "parentUUID": "f482ac37-e7a8-435d-b247-fceba2637ab8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 137,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "6a026fc1-b28e-44f1-9eda-4695363f853a",
              "parentUUID": "f482ac37-e7a8-435d-b247-fceba2637ab8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2818,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "1e6a6f8e-8299-4a88-b8c5-a2944ef41b95",
              "parentUUID": "f482ac37-e7a8-435d-b247-fceba2637ab8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5fee3caa-8a03-4267-825d-3c4297f1cb83",
            "0294bc1f-23d9-4958-a004-b5ae7466ca62",
            "6a026fc1-b28e-44f1-9eda-4695363f853a",
            "1e6a6f8e-8299-4a88-b8c5-a2944ef41b95"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3488,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f2bbab44-bcc5-4bf1-be44-90c6b4cf3a78",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4592,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:45807/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45807/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45807/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45807/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45807/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45807/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45807/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45807/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45807/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45807/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45807/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45807/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45807/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "81870a18-84df-4778-a54a-1c20ed828448",
              "parentUUID": "f2bbab44-bcc5-4bf1-be44-90c6b4cf3a78",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4791,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:45807/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45807/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45807/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45807/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45807/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45807/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45807/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45807/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45807/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45807/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45807/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45807/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45807/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "0d1f808b-e8c6-431c-a54f-8fd6c6ff5a77",
              "parentUUID": "f2bbab44-bcc5-4bf1-be44-90c6b4cf3a78",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4734,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:45807/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45807/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45807/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45807/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45807/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45807/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45807/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45807/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45807/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45807/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45807/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45807/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45807/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "328e47f0-3e89-409c-ab1e-307f3f35ca61",
              "parentUUID": "f2bbab44-bcc5-4bf1-be44-90c6b4cf3a78",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4782,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:45807/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45807/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45807/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45807/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45807/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45807/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45807/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45807/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45807/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45807/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45807/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45807/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45807/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "fc978713-b1ce-4a4b-a812-9eeec27e830a",
              "parentUUID": "f2bbab44-bcc5-4bf1-be44-90c6b4cf3a78",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4678,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:45807/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45807/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45807/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45807/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45807/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45807/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45807/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45807/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45807/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45807/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45807/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45807/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45807/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "27bae078-a1ef-4106-9ddb-6512179317dc",
              "parentUUID": "f2bbab44-bcc5-4bf1-be44-90c6b4cf3a78",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4706,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:45807/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45807/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45807/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45807/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45807/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45807/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45807/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45807/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45807/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45807/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45807/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45807/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45807/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "1a42b5df-9ff5-4b1e-aff5-2aae31ce3ae6",
              "parentUUID": "f2bbab44-bcc5-4bf1-be44-90c6b4cf3a78",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4711,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:45807/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45807/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45807/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45807/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45807/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45807/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45807/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45807/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45807/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45807/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45807/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45807/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45807/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "15acb503-1e8b-4e2a-a279-2f49623c4ba6",
              "parentUUID": "f2bbab44-bcc5-4bf1-be44-90c6b4cf3a78",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4704,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:45807/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45807/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45807/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45807/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45807/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45807/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45807/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45807/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45807/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45807/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45807/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45807/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45807/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "692af12a-67a9-40ff-8ef5-9d25d591b598",
              "parentUUID": "f2bbab44-bcc5-4bf1-be44-90c6b4cf3a78",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4740,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:45807/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45807/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45807/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45807/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45807/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45807/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45807/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45807/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45807/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45807/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45807/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45807/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45807/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "b57d696c-df9a-4d98-bd76-273568619fbe",
              "parentUUID": "f2bbab44-bcc5-4bf1-be44-90c6b4cf3a78",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "81870a18-84df-4778-a54a-1c20ed828448",
            "0d1f808b-e8c6-431c-a54f-8fd6c6ff5a77",
            "328e47f0-3e89-409c-ab1e-307f3f35ca61",
            "fc978713-b1ce-4a4b-a812-9eeec27e830a",
            "27bae078-a1ef-4106-9ddb-6512179317dc",
            "1a42b5df-9ff5-4b1e-aff5-2aae31ce3ae6",
            "15acb503-1e8b-4e2a-a279-2f49623c4ba6",
            "692af12a-67a9-40ff-8ef5-9d25d591b598",
            "b57d696c-df9a-4d98-bd76-273568619fbe"
          ],
          "pending": [],
          "skipped": [],
          "duration": 42438,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "429596b5-7c96-4be5-a2f6-121b5ab5b390",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4880,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:45807/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45807/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45807/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45807/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45807/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45807/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45807/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45807/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45807/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45807/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45807/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45807/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45807/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "a3c17362-f315-45e9-a95c-c64731dae91d",
              "parentUUID": "429596b5-7c96-4be5-a2f6-121b5ab5b390",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4658,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:45807/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45807/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45807/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45807/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45807/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45807/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45807/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45807/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45807/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45807/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45807/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45807/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45807/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "b946f379-f7b5-4663-8c97-b3384becd138",
              "parentUUID": "429596b5-7c96-4be5-a2f6-121b5ab5b390",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4764,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:45807/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45807/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45807/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45807/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45807/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45807/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45807/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45807/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45807/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45807/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45807/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45807/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45807/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "5a2655be-96b5-4a80-918e-888a42067de5",
              "parentUUID": "429596b5-7c96-4be5-a2f6-121b5ab5b390",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "a3c17362-f315-45e9-a95c-c64731dae91d",
            "b946f379-f7b5-4663-8c97-b3384becd138",
            "5a2655be-96b5-4a80-918e-888a42067de5"
          ],
          "pending": [],
          "skipped": [],
          "duration": 14302,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a501acaa-ca35-4bbf-a2e2-926b836a8a39",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 984,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:45807/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:45807/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:45807/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:45807/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:45807/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:45807/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:45807/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:45807/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45807/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45807/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:45807/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45807/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45807/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45807/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "a440d371-095c-4a4e-af64-9dc1556c7e3d",
              "parentUUID": "a501acaa-ca35-4bbf-a2e2-926b836a8a39",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 709,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:45807/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:45807/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:45807/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:45807/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:45807/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:45807/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:45807/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:45807/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45807/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45807/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:45807/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45807/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45807/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45807/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "8fcb4b7f-ad45-4977-8e73-f7aff3fcd3bb",
              "parentUUID": "a501acaa-ca35-4bbf-a2e2-926b836a8a39",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "a440d371-095c-4a4e-af64-9dc1556c7e3d",
            "8fcb4b7f-ad45-4977-8e73-f7aff3fcd3bb"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1693,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}